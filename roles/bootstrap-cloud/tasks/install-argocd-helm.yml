---
- name: ArgoCD | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/argocd"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: ArgoCD | Create values.yml
  template:
    src: "{{ item }}.j2"
    dest: "{{ kube_config_dir }}/addons/argocd/{{ item }}"
  with_items: ["argocd-values.yml"]

- name: ArgoCD | Copy ArgoCD chart
  copy:
    src: "{{ playbook_dir }}/roles/bootstrap-cloud/templates/argocd"
    dest: "{{ kube_config_dir }}/addons/argocd/"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: ArgoCD | Check if it was installed
  shell: |
    /usr/local/bin/helm status {{ argocd_release_name }} -n {{ argocd_namespace }} -o json
  register: already_installed_result
  failed_when:
    - "already_installed_result.rc != 0"
    - "'not found' not in already_installed_result.stderr"

- name: ArgoCD | Upgrade failed release
  shell: |
      /usr/local/bin/helm upgrade {{ argocd_release_name }} {{ kube_config_dir }}/addons/argocd/argocd \
        --create-namespace -n {{ argocd_namespace }} \
        -f {{ kube_config_dir }}/addons/argocd/argocd-values.yml
  when:
    - "already_installed_result.rc == 0"
    - "'not found' not in already_installed_result.stderr"
    - "'failed' in already_installed_result.stdout | from_json | json_query('info.status')"

- name: ArgoCD | Release ArgoCD from helm
  shell: |
    /usr/local/bin/helm install {{ argocd_release_name }} {{ kube_config_dir }}/addons/argocd/argocd \
      --create-namespace -n {{ argocd_namespace }} -f {{ kube_config_dir }}/addons/argocd/argocd-values.yml
  when:
    - "already_installed_result.rc != 0"
    - "'not found' in already_installed_result.stderr"

- name: Argocd | Remove exist fnvhash
  ansible.builtin.shell: |
    sudo rm -rf {{ local_release_dir }}/fnvhash-0.1.0.tar.gz

- name: Argocd | Download fnvhash
  include_tasks: "../../../download/tasks/download_file.yml"
  vars:
    download: "{{ download_defaults | combine(downloads.fnvhash) }}"

- name: ArgoCD | Install Pre-package fnvhash
  ansible.builtin.shell: |
    sudo pip3 install --no-index -f . {{ local_release_dir }}/fnvhash-0.1.0.tar.gz

#- name: ArgoCD | Apply Secret for self-signed Gitlab
#  ansible.builtin.shell: |
#    sudo chmod +755 ./argocd-apply-gitlab-repo-secret.sh
#    sudo ./argocd-apply-gitlab-repo-secret.sh
#  args:
#    chdir: "{{ kube_config_dir }}/addons/argocd"
#  ignore_errors: true

#- name: ArgoCD | Apply Secret for self-signed Gitea
#  ansible.builtin.shell: |
#    sudo chmod +755 ./argocd-apply-gitea-repo-secret.sh
#    sudo ./argocd-apply-gitea-repo-secret.sh
#  args:
#    chdir: "{{ kube_config_dir }}/addons/argocd"
#  ignore_errors: true
